cmake_minimum_required(VERSION 3.27)

SET(CMAKE_CXX_STANDARD          23)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

project(OpenGLEngine
        VERSION 1.0.0
        LANGUAGES C CXX)

# Includes expl√≠citos
include_directories(assets)
include_directories(src)
include_directories(src/engine)
include_directories(src/utils)
include_directories(src/event)
include_directories(src/renderer)
include_directories(src/core)
include_directories(src/openGL)
include_directories(src/window)
include_directories(src/input)
include_directories(src/application)


# Fontes da engine (sem main.cpp)
set(ENGINE_SRC
    src/application/application.cpp
    src/application/imGuiSystem.cpp
    src/application/main.cpp
    src/renderer/shader.cpp
    src/renderer/camera.cpp
    src/renderer/mesh.cpp
    src/renderer/meshFactory.cpp
    src/renderer/indexBuffer.cpp
    src/renderer/vertexBuffer.cpp
    src/renderer/vertexArray.cpp
    src/renderer/imageLoader.cpp
    src/renderer/cubeMapTexture.cpp
    src/renderer/texture2D.cpp
    src/renderer/shaderLibrary.cpp
    src/renderer/materialLibrary.cpp
    src/renderer/renderCommand.cpp
    src/renderer/renderer.cpp
    src/renderer/material.cpp
    src/input/cameraController.cpp
    src/core/log.cpp
    src/openGL/openGLContext.cpp
    src/window/windowSystem.cpp
)

add_compile_definitions(STB_IMAGE_IMPLEMENTATION)

# Biblioteca da engine
add_library(OpenGLEngine STATIC ${ENGINE_SRC})

target_link_libraries(OpenGLEngine PUBLIC glad imgui glfw glm spdlog pthread dl)

set_target_properties(OpenGLEngine PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin
)
